{% set files = product.getFiles %}

<div class="ui tab" data-tab="files">
  <h3 class="ui top attached header">{{ 'sylius.ui.files.product_file.title'|trans }}</h3>

  <div class="ui attached segment">

    {% if files is iterable and 0 != files|length %}
      <table class="ui celled padded table">
        <thead>
        <tr>
          <th>Name</th>
          <th>Type</th>
          <th>Size</th>
          <th>Version</th>
          <th>Updated At</th>
          <th></th>
        </tr>
        </thead>
        <tbody>

        {% for file in product.getFiles %}
          <tr>
            <td class="single line red popup">
              {% include 'Admin/File/Field/_title.html.twig' with {data: file} %}
            </td>
            <td>
              {{ file.type }}
            </td>
            <td>
              {% include 'Admin/File/Field/_size.html.twig' with {data: file.size} %}
            </td>
            <td>
              {{ file.version }}
            </td>
            <td>
              {% include 'Admin/File/Field/_updated_at.html.twig' with {data: file.updatedAt} %}
            </td>
            <td class="collapsing">
              <a class="ui icon button success" href="{{ path('app_admin_files_update', { id: file.id }) }}">
                <i class="edit icon"></i>
              </a>

              <a class="ui icon button" href="{{ uploads_directory }}{{ file.getName }}" target="_blank">
                <i class="download icon"></i>
              </a>

              <button id="delete_file[{{ file.id }}]" class="ui red icon button" type="button"
                      data-file-id="{{ file.id }}">
                <i class="icon trash"></i>
              </button>

              <input type="hidden" id="file_deletion[{{ file.id }}]" name="file_deletion[{{ file.id }}]" value="0">
              <input type="hidden" id="file_token[{{ file.id }}]" name="file_token[{{ file.id }}]"
                     value="{{ csrf_token(file.id) }}"/>
            </td>
          </tr>
        {% endfor %}
        </tbody>
      </table>
    {% endif %}

    <h4>Add New File</h4>
    <div class="ui form">
      <div class="two fields">
        <div class="four wide field">
          <label>File</label>
          <input type="file" name="new_file">
          <input type="hidden" id="current_file_id">
        </div>
        <div class="twelve wide field">
          <label>Title</label>
          <input type="text" name="file_properties[title]"
                 placeholder="Title">
        </div>
      </div>
      <div class="field">
        <label>URL</label>
        <input type="url" name="file_properties[url]">
      </div>
    </div>

    <!-- to split template up based on additional controller logic -->
    {# {{ render(controller('sylius.controller.admin.product_file:filesAction', { 'id': product.id })) }} #}

    {{ sylius_template_event(['sylius.admin.product.' ~ action ~ '.tab_associations', 'sylius.admin.product.tab_associations'], {'form': form}) }}
  </div>
</div>
<script>
  /**
   * Clicking a file delete button toggles UI and hidden input element to store deletion status and file id.
   *
   * Form submission handles file repository deletion via ProductController.
   */
  const deleteFileElements = document.querySelectorAll('[id^="delete_file"]');

  function toggleDeleteButton(element) {
    const icon = element.querySelector('i');
    if (element.classList.contains('red')) {
      element.classList.remove('red');
      element.classList.add('green');
      icon.classList.remove('trash');
      icon.classList.add('check');
      icon.classList.add('circle');
    } else {
      element.classList.add('red');
      element.classList.remove('green');
      icon.classList.add('trash');
      icon.classList.remove('check');
      icon.classList.remove('circle');
    }
  }

  function onFileDeletion() {
    event.preventDefault();
    const actionElement = document.querySelector(`[id="file_deletion[${this.dataset.fileId}]"]`);
    actionElement.setAttribute('value', actionElement.getAttribute('value') === '0' ? '1' : '0');
    toggleDeleteButton(this);
  }

  let confirmationButtonListener = null;
  deleteFileElements.forEach(deleteFileElement => {
    deleteFileElement.addEventListener('click', onFileDeletion)
  });
</script>
